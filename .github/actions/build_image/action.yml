name: Build and push image
description: Build and push a Docker image

inputs:
  name:
    description: The name of the image e.g. terraria-server
    required: true
  context:
    description: The path to the Docker context
    required: true
  file:
    description: The path to the Dockerfile
  tags:
    description: More tags to add using the docker/metadata-action action
    required: false
  image_description:
    description: Short description about the image
    required: false
    default: A Host Factor image
  build_args:
    required: false
    description: Docker build args
outputs:
  sha_image_url:
    description: The full URL for the image which uses the sha tag.
    value: ${{ fromJSON(steps.meta.outputs.json && steps.meta.outputs.json || '{}').tags[1] }}

runs:
  using: composite
  steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ github.token }}
    - name: Setup metadata
      uses: docker/metadata-action@v5
      id: meta
      with:
        images: |
          ghcr.io/hostfactor/apps/${{ inputs.name }}
        tags: |
          ${{ inputs.tags }}
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        build-args: ${{ inputs.build_args }}
        file: ${{ inputs.file }}
        push: true
        context: ${{ inputs.context }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: |
          "org.opencontainers.image.description=${{ inputs.image_description }}"
          "org.opencontainers.image.source=https://github.com/${{ github.repository }}"
          "org.opencontainers.image.url=https://github.com/${{ github.repository }}"
          "org.opencontainers.image.documentation=https://github.com/${{ github.repository }}"
