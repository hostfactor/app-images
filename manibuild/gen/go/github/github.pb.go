// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        (unknown)
// source: github/github.proto

package github

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GithubAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string                      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	On   *GithubActionTrigger        `protobuf:"bytes,2,opt,name=on,proto3" json:"on,omitempty"`
	Jobs map[string]*GithubActionJob `protobuf:"bytes,3,rep,name=jobs,proto3" json:"jobs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Env  map[string]string           `protobuf:"bytes,4,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GithubAction) Reset() {
	*x = GithubAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_github_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GithubAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GithubAction) ProtoMessage() {}

func (x *GithubAction) ProtoReflect() protoreflect.Message {
	mi := &file_github_github_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GithubAction.ProtoReflect.Descriptor instead.
func (*GithubAction) Descriptor() ([]byte, []int) {
	return file_github_github_proto_rawDescGZIP(), []int{0}
}

func (x *GithubAction) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GithubAction) GetOn() *GithubActionTrigger {
	if x != nil {
		return x.On
	}
	return nil
}

func (x *GithubAction) GetJobs() map[string]*GithubActionJob {
	if x != nil {
		return x.Jobs
	}
	return nil
}

func (x *GithubAction) GetEnv() map[string]string {
	if x != nil {
		return x.Env
	}
	return nil
}

type GithubActionJob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Uses   string                 `protobuf:"bytes,2,opt,name=uses,proto3" json:"uses,omitempty"`
	With   map[string]string      `protobuf:"bytes,3,rep,name=with,proto3" json:"with,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	RunsOn string                 `protobuf:"bytes,4,opt,name=runs_on,proto3" json:"runs_on,omitempty"`
	Steps  []*GithubActionJobStep `protobuf:"bytes,5,rep,name=steps,proto3" json:"steps,omitempty"`
}

func (x *GithubActionJob) Reset() {
	*x = GithubActionJob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_github_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GithubActionJob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GithubActionJob) ProtoMessage() {}

func (x *GithubActionJob) ProtoReflect() protoreflect.Message {
	mi := &file_github_github_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GithubActionJob.ProtoReflect.Descriptor instead.
func (*GithubActionJob) Descriptor() ([]byte, []int) {
	return file_github_github_proto_rawDescGZIP(), []int{1}
}

func (x *GithubActionJob) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GithubActionJob) GetUses() string {
	if x != nil {
		return x.Uses
	}
	return ""
}

func (x *GithubActionJob) GetWith() map[string]string {
	if x != nil {
		return x.With
	}
	return nil
}

func (x *GithubActionJob) GetRunsOn() string {
	if x != nil {
		return x.RunsOn
	}
	return ""
}

func (x *GithubActionJob) GetSteps() []*GithubActionJobStep {
	if x != nil {
		return x.Steps
	}
	return nil
}

type GithubActionJobStep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uses string            `protobuf:"bytes,1,opt,name=uses,proto3" json:"uses,omitempty"`
	Run  string            `protobuf:"bytes,2,opt,name=run,proto3" json:"run,omitempty"`
	Env  map[string]string `protobuf:"bytes,3,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Name string            `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	With map[string]string `protobuf:"bytes,5,rep,name=with,proto3" json:"with,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Id   string            `protobuf:"bytes,6,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GithubActionJobStep) Reset() {
	*x = GithubActionJobStep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_github_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GithubActionJobStep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GithubActionJobStep) ProtoMessage() {}

func (x *GithubActionJobStep) ProtoReflect() protoreflect.Message {
	mi := &file_github_github_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GithubActionJobStep.ProtoReflect.Descriptor instead.
func (*GithubActionJobStep) Descriptor() ([]byte, []int) {
	return file_github_github_proto_rawDescGZIP(), []int{2}
}

func (x *GithubActionJobStep) GetUses() string {
	if x != nil {
		return x.Uses
	}
	return ""
}

func (x *GithubActionJobStep) GetRun() string {
	if x != nil {
		return x.Run
	}
	return ""
}

func (x *GithubActionJobStep) GetEnv() map[string]string {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *GithubActionJobStep) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GithubActionJobStep) GetWith() map[string]string {
	if x != nil {
		return x.With
	}
	return nil
}

func (x *GithubActionJobStep) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GithubActionTrigger struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Schedule         []*GithubActionScheduleCron   `protobuf:"bytes,1,rep,name=schedule,proto3" json:"schedule,omitempty"`
	Push             *GithubActionPush             `protobuf:"bytes,2,opt,name=push,proto3" json:"push,omitempty"`
	WorkflowDispatch *GithubActionWorkflowDispatch `protobuf:"bytes,3,opt,name=workflow_dispatch,proto3" json:"workflow_dispatch,omitempty"`
}

func (x *GithubActionTrigger) Reset() {
	*x = GithubActionTrigger{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_github_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GithubActionTrigger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GithubActionTrigger) ProtoMessage() {}

func (x *GithubActionTrigger) ProtoReflect() protoreflect.Message {
	mi := &file_github_github_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GithubActionTrigger.ProtoReflect.Descriptor instead.
func (*GithubActionTrigger) Descriptor() ([]byte, []int) {
	return file_github_github_proto_rawDescGZIP(), []int{3}
}

func (x *GithubActionTrigger) GetSchedule() []*GithubActionScheduleCron {
	if x != nil {
		return x.Schedule
	}
	return nil
}

func (x *GithubActionTrigger) GetPush() *GithubActionPush {
	if x != nil {
		return x.Push
	}
	return nil
}

func (x *GithubActionTrigger) GetWorkflowDispatch() *GithubActionWorkflowDispatch {
	if x != nil {
		return x.WorkflowDispatch
	}
	return nil
}

type GithubActionWorkflowDispatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Input map[string]string `protobuf:"bytes,1,rep,name=input,proto3" json:"input,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GithubActionWorkflowDispatch) Reset() {
	*x = GithubActionWorkflowDispatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_github_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GithubActionWorkflowDispatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GithubActionWorkflowDispatch) ProtoMessage() {}

func (x *GithubActionWorkflowDispatch) ProtoReflect() protoreflect.Message {
	mi := &file_github_github_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GithubActionWorkflowDispatch.ProtoReflect.Descriptor instead.
func (*GithubActionWorkflowDispatch) Descriptor() ([]byte, []int) {
	return file_github_github_proto_rawDescGZIP(), []int{4}
}

func (x *GithubActionWorkflowDispatch) GetInput() map[string]string {
	if x != nil {
		return x.Input
	}
	return nil
}

type GithubActionPush struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Branches []string `protobuf:"bytes,1,rep,name=branches,proto3" json:"branches,omitempty"`
	Paths    []string `protobuf:"bytes,2,rep,name=paths,proto3" json:"paths,omitempty"`
}

func (x *GithubActionPush) Reset() {
	*x = GithubActionPush{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_github_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GithubActionPush) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GithubActionPush) ProtoMessage() {}

func (x *GithubActionPush) ProtoReflect() protoreflect.Message {
	mi := &file_github_github_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GithubActionPush.ProtoReflect.Descriptor instead.
func (*GithubActionPush) Descriptor() ([]byte, []int) {
	return file_github_github_proto_rawDescGZIP(), []int{5}
}

func (x *GithubActionPush) GetBranches() []string {
	if x != nil {
		return x.Branches
	}
	return nil
}

func (x *GithubActionPush) GetPaths() []string {
	if x != nil {
		return x.Paths
	}
	return nil
}

type GithubActionScheduleCron struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cron string `protobuf:"bytes,1,opt,name=cron,proto3" json:"cron,omitempty"`
}

func (x *GithubActionScheduleCron) Reset() {
	*x = GithubActionScheduleCron{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_github_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GithubActionScheduleCron) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GithubActionScheduleCron) ProtoMessage() {}

func (x *GithubActionScheduleCron) ProtoReflect() protoreflect.Message {
	mi := &file_github_github_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GithubActionScheduleCron.ProtoReflect.Descriptor instead.
func (*GithubActionScheduleCron) Descriptor() ([]byte, []int) {
	return file_github_github_proto_rawDescGZIP(), []int{6}
}

func (x *GithubActionScheduleCron) GetCron() string {
	if x != nil {
		return x.Cron
	}
	return ""
}

type GetLatestReleaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url       string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	AssetsUrl string `protobuf:"bytes,2,opt,name=assets_url,proto3" json:"assets_url,omitempty"`
	Id        string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	TagName   string `protobuf:"bytes,4,opt,name=tag_name,proto3" json:"tag_name,omitempty"`
	Name      string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetLatestReleaseResponse) Reset() {
	*x = GetLatestReleaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_github_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLatestReleaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestReleaseResponse) ProtoMessage() {}

func (x *GetLatestReleaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_github_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestReleaseResponse.ProtoReflect.Descriptor instead.
func (*GetLatestReleaseResponse) Descriptor() ([]byte, []int) {
	return file_github_github_proto_rawDescGZIP(), []int{7}
}

func (x *GetLatestReleaseResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *GetLatestReleaseResponse) GetAssetsUrl() string {
	if x != nil {
		return x.AssetsUrl
	}
	return ""
}

func (x *GetLatestReleaseResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetLatestReleaseResponse) GetTagName() string {
	if x != nil {
		return x.TagName
	}
	return ""
}

func (x *GetLatestReleaseResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_github_github_proto protoreflect.FileDescriptor

var file_github_github_proto_rawDesc = []byte{
	0x0a, 0x13, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x22, 0xbe, 0x02,
	0x0a, 0x0c, 0x47, 0x69, 0x74, 0x68, 0x75, 0x62, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x02, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x47, 0x69, 0x74, 0x68, 0x75, 0x62, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x02, 0x6f, 0x6e, 0x12,
	0x32, 0x0a, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x47, 0x69, 0x74, 0x68, 0x75, 0x62, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x4a, 0x6f, 0x62, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x6a,
	0x6f, 0x62, 0x73, 0x12, 0x2f, 0x0a, 0x03, 0x65, 0x6e, 0x76, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x47, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x6e, 0x76, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x03, 0x65, 0x6e, 0x76, 0x1a, 0x50, 0x0a, 0x09, 0x4a, 0x6f, 0x62, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x2d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x47, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4a, 0x6f, 0x62, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x36, 0x0a, 0x08, 0x45, 0x6e, 0x76, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xf6,
	0x01, 0x0a, 0x0f, 0x47, 0x69, 0x74, 0x68, 0x75, 0x62, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4a,
	0x6f, 0x62, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x04, 0x77, 0x69,
	0x74, 0x68, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x47, 0x69, 0x74, 0x68, 0x75, 0x62, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4a, 0x6f,
	0x62, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x77, 0x69, 0x74,
	0x68, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x75, 0x6e, 0x73, 0x5f, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x72, 0x75, 0x6e, 0x73, 0x5f, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x05, 0x73,
	0x74, 0x65, 0x70, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x47, 0x69, 0x74, 0x68, 0x75, 0x62, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4a, 0x6f, 0x62, 0x53, 0x74, 0x65, 0x70, 0x52, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x1a, 0x37,
	0x0a, 0x09, 0x57, 0x69, 0x74, 0x68, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xc3, 0x02, 0x0a, 0x13, 0x47, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x65, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75,
	0x73, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x75, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x72, 0x75, 0x6e, 0x12, 0x36, 0x0a, 0x03, 0x65, 0x6e, 0x76, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x47, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x65, 0x70, 0x2e,
	0x45, 0x6e, 0x76, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x39, 0x0a, 0x04, 0x77, 0x69, 0x74, 0x68, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x47, 0x69, 0x74, 0x68, 0x75, 0x62, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x65, 0x70, 0x2e, 0x57, 0x69, 0x74,
	0x68, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x77, 0x69, 0x74, 0x68, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x1a, 0x36, 0x0a, 0x08,
	0x45, 0x6e, 0x76, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x1a, 0x37, 0x0a, 0x09, 0x57, 0x69, 0x74, 0x68, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xd5, 0x01,
	0x0a, 0x13, 0x47, 0x69, 0x74, 0x68, 0x75, 0x62, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x12, 0x3c, 0x0a, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x47, 0x69, 0x74, 0x68, 0x75, 0x62, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x72, 0x6f, 0x6e, 0x52, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x70, 0x75, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x47, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x75, 0x73, 0x68, 0x52, 0x04, 0x70, 0x75, 0x73,
	0x68, 0x12, 0x52, 0x0a, 0x11, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x64, 0x69,
	0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x47, 0x69, 0x74, 0x68, 0x75, 0x62, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74,
	0x63, 0x68, 0x52, 0x11, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x64, 0x69, 0x73,
	0x70, 0x61, 0x74, 0x63, 0x68, 0x22, 0x9f, 0x01, 0x0a, 0x1c, 0x47, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x44, 0x69,
	0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x12, 0x45, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x47,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x38, 0x0a,
	0x0a, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x44, 0x0a, 0x10, 0x47, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x75, 0x73, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x62,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x62,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x74, 0x68, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x22, 0x2e, 0x0a,
	0x18, 0x47, 0x69, 0x74, 0x68, 0x75, 0x62, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x72, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x72, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x72, 0x6f, 0x6e, 0x22, 0x8c, 0x01,
	0x0a, 0x18, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1e, 0x0a, 0x0a,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x5f, 0x75, 0x72, 0x6c, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x74, 0x61, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x74, 0x61, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x7b, 0x0a, 0x0a,
	0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x42, 0x0b, 0x47, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x6f, 0x73, 0x74, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0xa2, 0x02, 0x03, 0x47, 0x58, 0x58, 0xaa, 0x02, 0x06, 0x47, 0x69, 0x74, 0x68,
	0x75, 0x62, 0xca, 0x02, 0x06, 0x47, 0x69, 0x74, 0x68, 0x75, 0x62, 0xe2, 0x02, 0x12, 0x47, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0xea, 0x02, 0x06, 0x47, 0x69, 0x74, 0x68, 0x75, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_github_github_proto_rawDescOnce sync.Once
	file_github_github_proto_rawDescData = file_github_github_proto_rawDesc
)

func file_github_github_proto_rawDescGZIP() []byte {
	file_github_github_proto_rawDescOnce.Do(func() {
		file_github_github_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_github_proto_rawDescData)
	})
	return file_github_github_proto_rawDescData
}

var file_github_github_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_github_github_proto_goTypes = []interface{}{
	(*GithubAction)(nil),                 // 0: github.GithubAction
	(*GithubActionJob)(nil),              // 1: github.GithubActionJob
	(*GithubActionJobStep)(nil),          // 2: github.GithubActionJobStep
	(*GithubActionTrigger)(nil),          // 3: github.GithubActionTrigger
	(*GithubActionWorkflowDispatch)(nil), // 4: github.GithubActionWorkflowDispatch
	(*GithubActionPush)(nil),             // 5: github.GithubActionPush
	(*GithubActionScheduleCron)(nil),     // 6: github.GithubActionScheduleCron
	(*GetLatestReleaseResponse)(nil),     // 7: github.GetLatestReleaseResponse
	nil,                                  // 8: github.GithubAction.JobsEntry
	nil,                                  // 9: github.GithubAction.EnvEntry
	nil,                                  // 10: github.GithubActionJob.WithEntry
	nil,                                  // 11: github.GithubActionJobStep.EnvEntry
	nil,                                  // 12: github.GithubActionJobStep.WithEntry
	nil,                                  // 13: github.GithubActionWorkflowDispatch.InputEntry
}
var file_github_github_proto_depIdxs = []int32{
	3,  // 0: github.GithubAction.on:type_name -> github.GithubActionTrigger
	8,  // 1: github.GithubAction.jobs:type_name -> github.GithubAction.JobsEntry
	9,  // 2: github.GithubAction.env:type_name -> github.GithubAction.EnvEntry
	10, // 3: github.GithubActionJob.with:type_name -> github.GithubActionJob.WithEntry
	2,  // 4: github.GithubActionJob.steps:type_name -> github.GithubActionJobStep
	11, // 5: github.GithubActionJobStep.env:type_name -> github.GithubActionJobStep.EnvEntry
	12, // 6: github.GithubActionJobStep.with:type_name -> github.GithubActionJobStep.WithEntry
	6,  // 7: github.GithubActionTrigger.schedule:type_name -> github.GithubActionScheduleCron
	5,  // 8: github.GithubActionTrigger.push:type_name -> github.GithubActionPush
	4,  // 9: github.GithubActionTrigger.workflow_dispatch:type_name -> github.GithubActionWorkflowDispatch
	13, // 10: github.GithubActionWorkflowDispatch.input:type_name -> github.GithubActionWorkflowDispatch.InputEntry
	1,  // 11: github.GithubAction.JobsEntry.value:type_name -> github.GithubActionJob
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_github_github_proto_init() }
func file_github_github_proto_init() {
	if File_github_github_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_github_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GithubAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_github_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GithubActionJob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_github_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GithubActionJobStep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_github_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GithubActionTrigger); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_github_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GithubActionWorkflowDispatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_github_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GithubActionPush); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_github_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GithubActionScheduleCron); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_github_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLatestReleaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_github_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_github_proto_goTypes,
		DependencyIndexes: file_github_github_proto_depIdxs,
		MessageInfos:      file_github_github_proto_msgTypes,
	}.Build()
	File_github_github_proto = out.File
	file_github_github_proto_rawDesc = nil
	file_github_github_proto_goTypes = nil
	file_github_github_proto_depIdxs = nil
}
