// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        (unknown)
// source: manifest/app.proto

package manifest

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AppManifest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the container.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The author of the container
	Author string `protobuf:"bytes,2,opt,name=author,proto3" json:"author,omitempty"`
	// A short description for the container
	Description string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Builds      []*Build `protobuf:"bytes,4,rep,name=builds,proto3" json:"builds,omitempty"`
}

func (x *AppManifest) Reset() {
	*x = AppManifest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manifest_app_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppManifest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppManifest) ProtoMessage() {}

func (x *AppManifest) ProtoReflect() protoreflect.Message {
	mi := &file_manifest_app_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppManifest.ProtoReflect.Descriptor instead.
func (*AppManifest) Descriptor() ([]byte, []int) {
	return file_manifest_app_proto_rawDescGZIP(), []int{0}
}

func (x *AppManifest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AppManifest) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *AppManifest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AppManifest) GetBuilds() []*Build {
	if x != nil {
		return x.Builds
	}
	return nil
}

type BuildSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tags []string `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty"`
	// The docker context.
	Context   *string           `protobuf:"bytes,2,opt,name=context,proto3,oneof" json:"context,omitempty"`
	BuildArgs map[string]string `protobuf:"bytes,3,rep,name=build_args,proto3" json:"build_args,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *BuildSpec) Reset() {
	*x = BuildSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manifest_app_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildSpec) ProtoMessage() {}

func (x *BuildSpec) ProtoReflect() protoreflect.Message {
	mi := &file_manifest_app_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildSpec.ProtoReflect.Descriptor instead.
func (*BuildSpec) Descriptor() ([]byte, []int) {
	return file_manifest_app_proto_rawDescGZIP(), []int{1}
}

func (x *BuildSpec) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *BuildSpec) GetContext() string {
	if x != nil && x.Context != nil {
		return *x.Context
	}
	return ""
}

func (x *BuildSpec) GetBuildArgs() map[string]string {
	if x != nil {
		return x.BuildArgs
	}
	return nil
}

// Generates an image under the scope of the app.
type Build struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the build. Used as a post-fix for identifying this particular app.
	Name        string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Spec        *BuildSpec    `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	Description string        `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Trigger     *BuildTrigger `protobuf:"bytes,4,opt,name=trigger,proto3" json:"trigger,omitempty"`
}

func (x *Build) Reset() {
	*x = Build{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manifest_app_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Build) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Build) ProtoMessage() {}

func (x *Build) ProtoReflect() protoreflect.Message {
	mi := &file_manifest_app_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Build.ProtoReflect.Descriptor instead.
func (*Build) Descriptor() ([]byte, []int) {
	return file_manifest_app_proto_rawDescGZIP(), []int{2}
}

func (x *Build) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Build) GetSpec() *BuildSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *Build) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Build) GetTrigger() *BuildTrigger {
	if x != nil {
		return x.Trigger
	}
	return nil
}

type BuildTrigger struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The results of the trigger. This field is updated whenever the trigger detects a change
	// in the value. If this value changes, a downstream GitHub action is triggered which causes
	// the app to run a rebuild.
	Outputs       *BuildTrigger_Outputs       `protobuf:"bytes,1,opt,name=outputs,proto3" json:"outputs,omitempty"`
	GithubRelease *BuildTrigger_GithubRelease `protobuf:"bytes,2,opt,name=github_release,proto3,oneof" json:"github_release,omitempty"`
	SteamFeed     *BuildTrigger_SteamFeed     `protobuf:"bytes,3,opt,name=steam_feed,proto3,oneof" json:"steam_feed,omitempty"`
}

func (x *BuildTrigger) Reset() {
	*x = BuildTrigger{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manifest_app_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildTrigger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildTrigger) ProtoMessage() {}

func (x *BuildTrigger) ProtoReflect() protoreflect.Message {
	mi := &file_manifest_app_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildTrigger.ProtoReflect.Descriptor instead.
func (*BuildTrigger) Descriptor() ([]byte, []int) {
	return file_manifest_app_proto_rawDescGZIP(), []int{3}
}

func (x *BuildTrigger) GetOutputs() *BuildTrigger_Outputs {
	if x != nil {
		return x.Outputs
	}
	return nil
}

func (x *BuildTrigger) GetGithubRelease() *BuildTrigger_GithubRelease {
	if x != nil {
		return x.GithubRelease
	}
	return nil
}

func (x *BuildTrigger) GetSteamFeed() *BuildTrigger_SteamFeed {
	if x != nil {
		return x.SteamFeed
	}
	return nil
}

type BuildTrigger_Outputs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The latest tag associated with a GitHub release. From GithubRelease.
	// Injects env var LATEST_TAG_NAME
	LatestTag *string `protobuf:"bytes,1,opt,name=latest_tag,proto3,oneof" json:"latest_tag,omitempty"`
	// The version parsed from the steam news feed. From SteamFeed.
	// Injects env var LATEST_STEAM_VERSION
	SteamNewsVersion *string `protobuf:"bytes,2,opt,name=steam_news_version,proto3,oneof" json:"steam_news_version,omitempty"`
	// Date string representing when the the output was created.
	CreatedAt *string `protobuf:"bytes,3,opt,name=created_at,proto3,oneof" json:"created_at,omitempty"`
	// A link to the release, if available.
	ReleaseLink *string `protobuf:"bytes,4,opt,name=release_link,proto3,oneof" json:"release_link,omitempty"`
}

func (x *BuildTrigger_Outputs) Reset() {
	*x = BuildTrigger_Outputs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manifest_app_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildTrigger_Outputs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildTrigger_Outputs) ProtoMessage() {}

func (x *BuildTrigger_Outputs) ProtoReflect() protoreflect.Message {
	mi := &file_manifest_app_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildTrigger_Outputs.ProtoReflect.Descriptor instead.
func (*BuildTrigger_Outputs) Descriptor() ([]byte, []int) {
	return file_manifest_app_proto_rawDescGZIP(), []int{3, 0}
}

func (x *BuildTrigger_Outputs) GetLatestTag() string {
	if x != nil && x.LatestTag != nil {
		return *x.LatestTag
	}
	return ""
}

func (x *BuildTrigger_Outputs) GetSteamNewsVersion() string {
	if x != nil && x.SteamNewsVersion != nil {
		return *x.SteamNewsVersion
	}
	return ""
}

func (x *BuildTrigger_Outputs) GetCreatedAt() string {
	if x != nil && x.CreatedAt != nil {
		return *x.CreatedAt
	}
	return ""
}

func (x *BuildTrigger_Outputs) GetReleaseLink() string {
	if x != nil && x.ReleaseLink != nil {
		return *x.ReleaseLink
	}
	return ""
}

type BuildTrigger_GithubRelease struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Repo string `protobuf:"bytes,1,opt,name=repo,proto3" json:"repo,omitempty"`
}

func (x *BuildTrigger_GithubRelease) Reset() {
	*x = BuildTrigger_GithubRelease{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manifest_app_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildTrigger_GithubRelease) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildTrigger_GithubRelease) ProtoMessage() {}

func (x *BuildTrigger_GithubRelease) ProtoReflect() protoreflect.Message {
	mi := &file_manifest_app_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildTrigger_GithubRelease.ProtoReflect.Descriptor instead.
func (*BuildTrigger_GithubRelease) Descriptor() ([]byte, []int) {
	return file_manifest_app_proto_rawDescGZIP(), []int{3, 1}
}

func (x *BuildTrigger_GithubRelease) GetRepo() string {
	if x != nil {
		return x.Repo
	}
	return ""
}

type BuildTrigger_SteamFeedSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TitleMatcher *string `protobuf:"bytes,1,opt,name=title_matcher,proto3,oneof" json:"title_matcher,omitempty"`
	BodyMatcher  *string `protobuf:"bytes,2,opt,name=body_matcher,proto3,oneof" json:"body_matcher,omitempty"`
}

func (x *BuildTrigger_SteamFeedSpec) Reset() {
	*x = BuildTrigger_SteamFeedSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manifest_app_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildTrigger_SteamFeedSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildTrigger_SteamFeedSpec) ProtoMessage() {}

func (x *BuildTrigger_SteamFeedSpec) ProtoReflect() protoreflect.Message {
	mi := &file_manifest_app_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildTrigger_SteamFeedSpec.ProtoReflect.Descriptor instead.
func (*BuildTrigger_SteamFeedSpec) Descriptor() ([]byte, []int) {
	return file_manifest_app_proto_rawDescGZIP(), []int{3, 2}
}

func (x *BuildTrigger_SteamFeedSpec) GetTitleMatcher() string {
	if x != nil && x.TitleMatcher != nil {
		return *x.TitleMatcher
	}
	return ""
}

func (x *BuildTrigger_SteamFeedSpec) GetBodyMatcher() string {
	if x != nil && x.BodyMatcher != nil {
		return *x.BodyMatcher
	}
	return ""
}

type BuildTrigger_SteamFeed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId string                      `protobuf:"bytes,1,opt,name=app_id,proto3" json:"app_id,omitempty"`
	Spec  *BuildTrigger_SteamFeedSpec `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *BuildTrigger_SteamFeed) Reset() {
	*x = BuildTrigger_SteamFeed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manifest_app_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildTrigger_SteamFeed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildTrigger_SteamFeed) ProtoMessage() {}

func (x *BuildTrigger_SteamFeed) ProtoReflect() protoreflect.Message {
	mi := &file_manifest_app_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildTrigger_SteamFeed.ProtoReflect.Descriptor instead.
func (*BuildTrigger_SteamFeed) Descriptor() ([]byte, []int) {
	return file_manifest_app_proto_rawDescGZIP(), []int{3, 3}
}

func (x *BuildTrigger_SteamFeed) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *BuildTrigger_SteamFeed) GetSpec() *BuildTrigger_SteamFeedSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

var File_manifest_app_proto protoreflect.FileDescriptor

var file_manifest_app_proto_rawDesc = []byte{
	0x0a, 0x12, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x2f, 0x61, 0x70, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x22, 0x84,
	0x01, 0x0a, 0x0b, 0x41, 0x70, 0x70, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x06,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d,
	0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x06, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x73, 0x22, 0xcc, 0x01, 0x0a, 0x09, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x53,
	0x70, 0x65, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1d, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x88, 0x01, 0x01, 0x12, 0x42, 0x0a, 0x0a, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f,
	0x61, 0x72, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x61, 0x6e,
	0x69, 0x66, 0x65, 0x73, 0x74, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x70, 0x65, 0x63, 0x2e,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x41, 0x72, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x1a, 0x3c, 0x0a, 0x0e, 0x42, 0x75,
	0x69, 0x6c, 0x64, 0x41, 0x72, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x22, 0x98, 0x01, 0x0a, 0x05, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x2e, 0x42, 0x75, 0x69, 0x6c,
	0x64, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a,
	0x07, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x54,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x07, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x22,
	0x8b, 0x06, 0x0a, 0x0c, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x12, 0x38, 0x0a, 0x07, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x2e, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x73, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x12, 0x51, 0x0a, 0x0e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x5f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x2e, 0x42, 0x75,
	0x69, 0x6c, 0x64, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x47, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x5f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x88, 0x01, 0x01, 0x12, 0x45, 0x0a,
	0x0a, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x2e, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x46,
	0x65, 0x65, 0x64, 0x48, 0x01, 0x52, 0x0a, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x66, 0x65, 0x65,
	0x64, 0x88, 0x01, 0x01, 0x1a, 0xf7, 0x01, 0x0a, 0x07, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73,
	0x12, 0x23, 0x0a, 0x0a, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x74,
	0x61, 0x67, 0x88, 0x01, 0x01, 0x12, 0x33, 0x0a, 0x12, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x6e,
	0x65, 0x77, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x01, 0x52, 0x12, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x6e, 0x65, 0x77, 0x73, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x27, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0c, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6c, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x5f, 0x74, 0x61, 0x67, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x73, 0x74, 0x65, 0x61,
	0x6d, 0x5f, 0x6e, 0x65, 0x77, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x42, 0x0f, 0x0a,
	0x0d, 0x5f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x1a, 0x23,
	0x0a, 0x0d, 0x47, 0x69, 0x74, 0x68, 0x75, 0x62, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72,
	0x65, 0x70, 0x6f, 0x1a, 0x86, 0x01, 0x0a, 0x0d, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x46, 0x65, 0x65,
	0x64, 0x53, 0x70, 0x65, 0x63, 0x12, 0x29, 0x0a, 0x0d, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0d,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x88, 0x01, 0x01,
	0x12, 0x27, 0x0a, 0x0c, 0x62, 0x6f, 0x64, 0x79, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0c, 0x62, 0x6f, 0x64, 0x79, 0x5f, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x42, 0x0f, 0x0a, 0x0d, 0x5f,
	0x62, 0x6f, 0x64, 0x79, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x1a, 0x5d, 0x0a, 0x09,
	0x53, 0x74, 0x65, 0x61, 0x6d, 0x46, 0x65, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x70, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69,
	0x64, 0x12, 0x38, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x46, 0x65, 0x65,
	0x64, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x42, 0x11, 0x0a, 0x0f, 0x5f,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x5f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x42, 0x84, 0x01,
	0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x42, 0x08,
	0x41, 0x70, 0x70, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2a, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x6f, 0x73, 0x74, 0x66, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x6d, 0x61,
	0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0xa2, 0x02, 0x03, 0x4d, 0x58, 0x58, 0xaa, 0x02, 0x08, 0x4d,
	0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0xca, 0x02, 0x08, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65,
	0x73, 0x74, 0xe2, 0x02, 0x14, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x5c, 0x47, 0x50,
	0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x08, 0x4d, 0x61, 0x6e, 0x69,
	0x66, 0x65, 0x73, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_manifest_app_proto_rawDescOnce sync.Once
	file_manifest_app_proto_rawDescData = file_manifest_app_proto_rawDesc
)

func file_manifest_app_proto_rawDescGZIP() []byte {
	file_manifest_app_proto_rawDescOnce.Do(func() {
		file_manifest_app_proto_rawDescData = protoimpl.X.CompressGZIP(file_manifest_app_proto_rawDescData)
	})
	return file_manifest_app_proto_rawDescData
}

var file_manifest_app_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_manifest_app_proto_goTypes = []interface{}{
	(*AppManifest)(nil),                // 0: manifest.AppManifest
	(*BuildSpec)(nil),                  // 1: manifest.BuildSpec
	(*Build)(nil),                      // 2: manifest.Build
	(*BuildTrigger)(nil),               // 3: manifest.BuildTrigger
	nil,                                // 4: manifest.BuildSpec.BuildArgsEntry
	(*BuildTrigger_Outputs)(nil),       // 5: manifest.BuildTrigger.Outputs
	(*BuildTrigger_GithubRelease)(nil), // 6: manifest.BuildTrigger.GithubRelease
	(*BuildTrigger_SteamFeedSpec)(nil), // 7: manifest.BuildTrigger.SteamFeedSpec
	(*BuildTrigger_SteamFeed)(nil),     // 8: manifest.BuildTrigger.SteamFeed
}
var file_manifest_app_proto_depIdxs = []int32{
	2, // 0: manifest.AppManifest.builds:type_name -> manifest.Build
	4, // 1: manifest.BuildSpec.build_args:type_name -> manifest.BuildSpec.BuildArgsEntry
	1, // 2: manifest.Build.spec:type_name -> manifest.BuildSpec
	3, // 3: manifest.Build.trigger:type_name -> manifest.BuildTrigger
	5, // 4: manifest.BuildTrigger.outputs:type_name -> manifest.BuildTrigger.Outputs
	6, // 5: manifest.BuildTrigger.github_release:type_name -> manifest.BuildTrigger.GithubRelease
	8, // 6: manifest.BuildTrigger.steam_feed:type_name -> manifest.BuildTrigger.SteamFeed
	7, // 7: manifest.BuildTrigger.SteamFeed.spec:type_name -> manifest.BuildTrigger.SteamFeedSpec
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_manifest_app_proto_init() }
func file_manifest_app_proto_init() {
	if File_manifest_app_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_manifest_app_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppManifest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manifest_app_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manifest_app_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Build); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manifest_app_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildTrigger); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manifest_app_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildTrigger_Outputs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manifest_app_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildTrigger_GithubRelease); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manifest_app_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildTrigger_SteamFeedSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manifest_app_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildTrigger_SteamFeed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_manifest_app_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_manifest_app_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_manifest_app_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_manifest_app_proto_msgTypes[7].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_manifest_app_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_manifest_app_proto_goTypes,
		DependencyIndexes: file_manifest_app_proto_depIdxs,
		MessageInfos:      file_manifest_app_proto_msgTypes,
	}.Build()
	File_manifest_app_proto = out.File
	file_manifest_app_proto_rawDesc = nil
	file_manifest_app_proto_goTypes = nil
	file_manifest_app_proto_depIdxs = nil
}
